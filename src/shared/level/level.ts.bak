import { LevelAnimationRegistry } from "../levelanim/registry";
import { Config } from "../levelset/config";
import { Gravity } from "./gravity";

export class Level {
    animations: any;
    gravity: any;
    data: any;

    constructor(public config: Config) {
        this.config = config;
        this.animations = new LevelAnimationRegistry();
        this.gravity = new Gravity(this.config.gravity);
        this.data = config.level.cache || null;
    }

    public registerAnimations() {
        // () => {}?
    }

    preload(fn: CallableFunction) {}

    destruct() {}

    paint() {}

    // /**
    //  * Client-Only!
    //  * TODO: Create and add to level.ClientLevel instead.
    //  */
    // public destruct() {
    //     if (ENV_IS_CLIENT) {
    //         State.shapes.level = null;
    //         State.shapes.innerborder = null;
    //         State.shapes.outerBorderLeft = null;
    //         State.shapes.outerBorderRight = null;
    //         State.shapes.outerBorderTop = null;
    //         State.shapes.outerBorderBottom = null;
    //     }
    // }

    // /**
    //  * Client-Only!
    //  * TODO: Create and add to level.ClientLevel instead.
    //  */
    // public paint() {
    //     if (ENV_IS_CLIENT) {
    //         State.shapes.level = new Shape(this.data.walls);
    //         setGameTransform(State.shapes.level);
    //         State.shapes.innerborder = innerBorder();
    //         Object.assign(State.shapes, outerBorder());
    //     }
    // }

    // public preload(continueFn) {
    //     const level = this.config.level;
    //     if (level.cache) {
    //         continueFn();
    //     } else {
    //         new ImageDecoder(level.imagedata).then(
    //             function (data) {
    //                 level.cache = new LevelData(data, this.animations);
    //                 level.imagedata = null;
    //                 this.data = level.cache;
    //                 this.registerAnimations();
    //                 continueFn();
    //             }.bind(this)
    //         );
    //     }
    // }
}
